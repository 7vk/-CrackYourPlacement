
class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        
        if(heights.size()==1) return heights[0];
        int n=heights.size();
        int nextsmall[n];
        stack<int> st;
        for(int i=n-1;i>=0;i--){
            while(!st.empty() && heights[i]<=heights[st.top()]) st.pop();
            nextsmall[i]=st.empty()?heights.size():st.top();
            st.push(i);
        }
        int prevsmall[n];
        stack<int> st2;
        for(int i=0;i<n;i++){
            while(!st2.empty() and heights[i]<=heights[st2.top()]){
                st2.pop();
            } 
            prevsmall[i]=st2.empty()?-1:st2.top();
            st2.push(i);
        }
        
        int maxnum=0;
        for(int i=0; i<n;i++){
            maxnum=max(maxnum,(nextsmall[i]-prevsmall[i]-1)*heights[i]);
        }
        return maxnum;
    }
};
